
gcloud functions deploy getUsers \
--region=australia-southeast1 \
--source=. \
--runtime=python310 \
--entry-point getUsers \
--trigger-http



SCHEMA: 

CREATE TABLE users (
  username VARCHAR(50) NOT NULL UNIQUE,
  password VARCHAR(50) NOT NULL,
  admin BOOLEAN DEFAULT false,
  PRIMARY KEY (username)
);

CREATE TABLE tasks (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  deleted BOOLEAN DEFAULT false,
  translated BOOLEAN DEFAULT false,
  translated_date TIMESTAMP  DEFAULT NULL,
  done BOOLEAN DEFAULT false,
  done_date TIMESTAMP DEFAULT NULL,
  username VARCHAR(50) NOT NULL
  );


  ALTER TABLE tasks
  ADD CONSTRAINT tasks_user_fkey
  FOREIGN KEY (username) REFERENCES users (username) ON DELETE CASCADE;










(1) Use:
      a. TypeScript, Angular, Material UI, Postgres, and Google/MS AI translation. Extra credit for using ngrx or other reactive store for the translate button.
V     b. GitHub usage for repository management.
V     c. Deployment to Google Cloud. Extra credit for using GitHub Actions, that is, CI/CD on code push to master.
      d. Running automated tests. Extra credit for also having UI testing.

      (2) Workflow requirement:
V     a. Live app deployed on the internet so we can test it works.
      b. We will signup and login.
      c. We will add an item to to-do, click a button to translate it and logout.
V     d. Have a normal UI for users, where they can add list items and click the translate button.
      e. Have an admin UI, showing a list of all users and clicking on a user should show their history of usage and if they have clicked the translate button.

      (3) We will review your code on GitHub â€“ the readme should tell us how to run your code. We will be looking at code quality, code comments, and testing choices. Extra points for nice editorconfig/linting in VSCode, nice changelog etc. We favor functional, easy to read code.

      (4) For documentation, we want you to write a document which describes how to deploy your application to Google Cloud. This is so that we get an understanding of how you write documentation which your colleagues can use should it be required. That is, a technical person at your skill level should be able to read and use the document effectively. We use Confluence / JIRA for our internal knowledge base, so dot points and screenshots are fine.



